language: cpp
sudo: required
matrix:
  include:
    - os: osx
      compiler: clang
      script:
        - make update_dep
        - make release
        - make debug
        - cd ./bin && ./sort_r --unittest
    - os: linux
      dist: xenial
      compiler: gcc
      env:
        - MATRIX_EVAL="CC=gcc-7 && CXX=g++-7"
      addons:
         apt:
           sources:
            - ubuntu-toolchain-r-test
           packages:
            - g++-7
            - libopenexr-dev
            - libtiff-dev
            - libpng-dev
            - libboost-all-dev
      before_install:
        - eval "${MATRIX_EVAL}" 
      script:
        - wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | sudo apt-key add -
        - sudo apt-add-repository "deb http://apt.llvm.org/xenial/ llvm-toolchain-xenial-6.0 main"
        - sudo apt-get update
        - sudo apt-get install -y clang-6.0
        - make update_dep
        - make release
        - make debug
        - cd ./bin && ./sort_r --unittest
    - os: windows
      install:
        - if [[ "${TRAVIS_OS_NAME}" == "windows" ]]; then
            export PATH="$PATH:/c/Program Files (x86)/Microsoft Visual Studio/2017/BuildTools/MSBuild/15.0/Bin"
            export CMAKE_GENERATOR="Visual Studio 15 2017";
          fi
      script:
        - wget http://45.63.123.194/sort_dependencies/win/dependencies.zip -O dependencies.zip
        - 7z x dependencies.zip -o.
        - mkdir proj_release && cd proj_release
        - cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_GENERATOR_PLATFORM=x64 -G "${CMAKE_GENERATOR}" .. && MSBuild.exe SORT.sln /property:Configuration=Release -maxcpucount	
        - cd .. && mkdir proj_debug && cd proj_debug	
        - cmake -DCMAKE_BUILD_TYPE=Debug -DCMAKE_GENERATOR_PLATFORM=x64 -G "${CMAKE_GENERATOR}" .. && MSBuild.exe SORT.sln /property:Configuration=Debug -maxcpucount	
        - cd ../bin && ./sort_r.exe --unittest
